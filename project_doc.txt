This project is an interactive chatbot built using OpenAI API and LangChain, integrated with a FastAPI-based FTP job server to analyze and assist with Mainframe JCL job failures.

It supports:

Job Log Analysis via prompt like job: TS65154A

Automatic log fetching through FastAPI

LLM-based failure explanation and suggestions

Manual fix and job resubmission

Tracking multiple job completions


User ‚ûú Streamlit UI ‚ûú LangChain Chatbot
                ‚¨á
     Checks if "job: JOBID" in prompt
                ‚¨á
     ‚ûú Calls FastAPI FTP Job Server
         ‚¨á
    Downloads job log file (e.g., TS65154A.log)
                ‚¨á
  ‚ûú Sends log to LLM (OpenAI via LangChain)
         ‚¨á
Returns explanation + fix steps to user

Components Used
üß† Language Model
OpenAI GPT-3.5 Turbo

LangChain ChatOpenAI wrapper for streaming and prompt chaining

üì¶ Vector Store (Optional for RAG)
FAISS for document retrieval if prompt is not job-related

üì§ Job Log Fetcher
FastAPI + FTP-based server exposes /job/{job_id} endpoint

Returns status and writes logs to local disk (./logs/{job_id}.log)

üñ•Ô∏è Frontend
Streamlit interactive UI

Real-time assistant chat experience

üß∞ Libraries Used
langchain

openai

streamlit

requests

faiss-cpu

dotenv

re, os, time


Input: job: TS65154A

Regex extracts TS65154A

Sends GET to http://localhost:8000/job/TS65154A

If found, reads TS65154A.log

Sends log to OpenAI with:





RAG Integration for JCL Analysis & Correction
üîç Purpose
The RAG module enhances the chatbot's ability to:

Understand JCL parameters, abends, and syntax

Cross-reference job errors with internal documentation

Suggest context-aware fixes for JCL issues

This is especially useful when the job log includes unclear errors or when parameters like SPACE, DSN, DISP, etc., are incorrectly used.



Job fails ‚ûú Job log analyzed via LLM
        ‚¨á
If error seems related to JCL content
        ‚¨á
Relevant internal docs fetched using FAISS retriever
        ‚¨á
Context + user prompt sent to OpenAI
        ‚¨á
LLM returns fix explanation + updated JCL sample



Searches FAISS vector store with keywords: SB37, SPACE, DD1

Retrieves internal doc explaining SPACE parameter misuse

Sends prompt + context to LLM

Returns:

Explanation of B37

Corrected SPACE parameter suggestion

Updated JCL snippet

"the job failed due to an SB37 (B37-04) abend, indicating a space allocation issue.

Your SPACE=(TRK,(100,20)) may be insufficient.

Try increasing it or using SPACE=(CYL,(200,50))."
